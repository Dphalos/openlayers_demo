{"id":"checkbox.js","dependencies":[{"name":"C:\\Users\\denizhan\\Desktop\\openlayers_demo1\\package.json","includedInParent":true,"mtime":1598024840457}],"generated":{"js":"/*\r\nimport LayerGroup from 'ol/layer/Group';\r\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer';\r\nimport TileWMS from 'ol/source/TileWMS';\r\nimport {Map, View} from 'ol';\r\nimport OSM from 'ol/source/OSM';\r\nimport map  from './index.js';\r\n\r\n\r\nvar layersRoads = new LayerGroup({\r\n    layers: [\r\n\r\n    new TileLayer({\r\n      source: new TileWMS({\r\n        url: 'http://localhost:8080/geoserver/geo_test1/wms',\r\n        params: {'LAYERS': '\tgeo_test1:gis_osm_roads_free_1', 'TILED': true},\r\n        serverType: 'geoserver',\r\n        transition: 0,\r\n      })\r\n    }) ]\r\n  });\r\n  \r\n   var layersTransport = new LayerGroup({\r\n      name: 'PublicTransportLayer',\r\n      layers: [\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://localhost:8080/geoserver/geo_test1/wms',\r\n          params: {'LAYERS': 'geo_test1:gis_osm_transport_free_1', 'TILED': true},\r\n          serverType: 'geoserver',\r\n          transition: 0,\r\n        })\r\n      }) ]\r\n    });\r\n  \r\n  \r\n    var layersPlaces = new LayerGroup({\r\n      name: 'PlacesLayer',\r\n      layers: [\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://localhost:8080/geoserver/geo_test1/wms',\r\n          params: {'LAYERS': 'geo_test1:gis_osm_places_free_1', 'TILED': true},\r\n          serverType: 'geoserver',\r\n          transition: 0,\r\n        })\r\n      }) ]\r\n    });\r\n  \r\n  \r\n    var layersPois = new LayerGroup({\r\n      name: 'PointofInterestsLayer',\r\n      layers: [\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://localhost:8080/geoserver/geo_test1/wms',\r\n          params: {'LAYERS': 'geo_test1:gis_osm_pois_free_1', 'TILED': true},\r\n          serverType: 'geoserver',\r\n          transition: 0\r\n        })\r\n      }) ]\r\n    });\r\n\r\n\r\nvar transportCheckbox = document.querySelector(\"input[name=transportCheck]\");\r\nvar roadsCheckbox = document.querySelector(\"input[name=roadsCheck]\");\r\nvar placesCheckbox = document.querySelector(\"input[name=placesCheck]\");\r\nvar poisCheckbox = document.querySelector(\"input[name=poisCheck]\");\r\n\r\ntransportCheckbox.addEventListener( 'change', function() {\r\n    if(this.checked) {\r\n        // Checkbox is checked..\r\n        console.log(\"checked\");\r\n        map.addLayer(layersTransport);\r\n    } else {\r\n        // Checkbox is not checked..\r\n        console.log(\"not checked\");\r\n        map.removeLayer(layersTransport);\r\n    }\r\n});\r\n\r\nroadsCheckbox.addEventListener( 'change', function() {\r\n  if(this.checked) {\r\n      // Checkbox is checked..\r\n      console.log(\"checked\");\r\n      map.addLayer(layersRoads);\r\n  } else {\r\n      // Checkbox is not checked..\r\n      console.log(\"not checked\");\r\n      map.removeLayer(layersRoads);\r\n  }\r\n});\r\n\r\nplacesCheckbox.addEventListener( 'change', function() {\r\n  if(this.checked) {\r\n      // Checkbox is checked..\r\n      console.log(\"checked\");\r\n      map.addLayer(layersPlaces);\r\n  } else {\r\n      // Checkbox is not checked..\r\n      console.log(\"not checked\");\r\n      map.removeLayer(layersPlaces);\r\n  }\r\n});\r\n\r\npoisCheckbox.addEventListener( 'change', function() {\r\n  if(this.checked) {\r\n      // Checkbox is checked..\r\n      console.log(\"checked\");\r\n      map.addLayer(layersPois);\r\n  } else {\r\n      // Checkbox is not checked..\r\n      console.log(\"not checked\");\r\n      map.removeLayer(layersPois);\r\n  }\r\n});\r\n\r\n*/"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"checkbox.js","original":{"line":1,"column":0}}],"sources":{"checkbox.js":"/*\r\nimport LayerGroup from 'ol/layer/Group';\r\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer';\r\nimport TileWMS from 'ol/source/TileWMS';\r\nimport {Map, View} from 'ol';\r\nimport OSM from 'ol/source/OSM';\r\nimport map  from './index.js';\r\n\r\n\r\nvar layersRoads = new LayerGroup({\r\n    layers: [\r\n\r\n    new TileLayer({\r\n      source: new TileWMS({\r\n        url: 'http://localhost:8080/geoserver/geo_test1/wms',\r\n        params: {'LAYERS': '\tgeo_test1:gis_osm_roads_free_1', 'TILED': true},\r\n        serverType: 'geoserver',\r\n        transition: 0,\r\n      })\r\n    }) ]\r\n  });\r\n  \r\n   var layersTransport = new LayerGroup({\r\n      name: 'PublicTransportLayer',\r\n      layers: [\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://localhost:8080/geoserver/geo_test1/wms',\r\n          params: {'LAYERS': 'geo_test1:gis_osm_transport_free_1', 'TILED': true},\r\n          serverType: 'geoserver',\r\n          transition: 0,\r\n        })\r\n      }) ]\r\n    });\r\n  \r\n  \r\n    var layersPlaces = new LayerGroup({\r\n      name: 'PlacesLayer',\r\n      layers: [\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://localhost:8080/geoserver/geo_test1/wms',\r\n          params: {'LAYERS': 'geo_test1:gis_osm_places_free_1', 'TILED': true},\r\n          serverType: 'geoserver',\r\n          transition: 0,\r\n        })\r\n      }) ]\r\n    });\r\n  \r\n  \r\n    var layersPois = new LayerGroup({\r\n      name: 'PointofInterestsLayer',\r\n      layers: [\r\n      new TileLayer({\r\n        source: new TileWMS({\r\n          url: 'http://localhost:8080/geoserver/geo_test1/wms',\r\n          params: {'LAYERS': 'geo_test1:gis_osm_pois_free_1', 'TILED': true},\r\n          serverType: 'geoserver',\r\n          transition: 0\r\n        })\r\n      }) ]\r\n    });\r\n\r\n\r\nvar transportCheckbox = document.querySelector(\"input[name=transportCheck]\");\r\nvar roadsCheckbox = document.querySelector(\"input[name=roadsCheck]\");\r\nvar placesCheckbox = document.querySelector(\"input[name=placesCheck]\");\r\nvar poisCheckbox = document.querySelector(\"input[name=poisCheck]\");\r\n\r\ntransportCheckbox.addEventListener( 'change', function() {\r\n    if(this.checked) {\r\n        // Checkbox is checked..\r\n        console.log(\"checked\");\r\n        map.addLayer(layersTransport);\r\n    } else {\r\n        // Checkbox is not checked..\r\n        console.log(\"not checked\");\r\n        map.removeLayer(layersTransport);\r\n    }\r\n});\r\n\r\nroadsCheckbox.addEventListener( 'change', function() {\r\n  if(this.checked) {\r\n      // Checkbox is checked..\r\n      console.log(\"checked\");\r\n      map.addLayer(layersRoads);\r\n  } else {\r\n      // Checkbox is not checked..\r\n      console.log(\"not checked\");\r\n      map.removeLayer(layersRoads);\r\n  }\r\n});\r\n\r\nplacesCheckbox.addEventListener( 'change', function() {\r\n  if(this.checked) {\r\n      // Checkbox is checked..\r\n      console.log(\"checked\");\r\n      map.addLayer(layersPlaces);\r\n  } else {\r\n      // Checkbox is not checked..\r\n      console.log(\"not checked\");\r\n      map.removeLayer(layersPlaces);\r\n  }\r\n});\r\n\r\npoisCheckbox.addEventListener( 'change', function() {\r\n  if(this.checked) {\r\n      // Checkbox is checked..\r\n      console.log(\"checked\");\r\n      map.addLayer(layersPois);\r\n  } else {\r\n      // Checkbox is not checked..\r\n      console.log(\"not checked\");\r\n      map.removeLayer(layersPois);\r\n  }\r\n});\r\n\r\n*/"},"lineCount":null}},"error":null,"hash":"790188cbc766a0e4373abbb1c4500c5b","cacheData":{"env":{}}}